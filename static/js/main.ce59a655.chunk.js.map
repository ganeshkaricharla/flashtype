{"version":3,"sources":["assets/logo.png","components/NavBar/NavBar.jsx","assets/hero.png","components/Landing/Landing.jsx","components/Footer/Footer.jsx","components/TryAgain/TryAgain.jsx","components/ChallengeDetailsCard/ChallengeDetailsCard.jsx","components/TestLetter/TestLetter.jsx","components/TypingChallenge/TypingChallenge.jsx","components/TypingChallengeContainer/TypingChallengeContainer.jsx","components/TestContainer/TestContainer.jsx","components/ChallengeSection/ChallengeSection.jsx","components/App/App.js","index.js"],"names":["NavBar","className","src","logo","alt","Landing","data-aos","options","strings","autoStart","loop","hero","Footer","href","target","rel","TryAgain","words","characters","wpm","startAgain","onClick","window","open","ChallengeDetailsCard","cardName","cardValue","TestLetter","individualLetterInfo","statusClass","correct","incorrect","notAttempted","status","testLetter","TypingChallenge","selectedParagraph","timeRemaining","timerStarted","testInfo","onInputChange","map","index","onChange","e","value","placeholder","TypingChallengeContainer","TestContainer","ChallengeSection","serviceUrl","defaultState","App","state","fetchNewParagraph","fetch","then","response","text","data","split","selectedLetter","setState","startTimer","timer","setInterval","timeSpent","clearInterval","handleUserInput","inputValue","length","slice","isCorrect","this","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ce59a655.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.904ac8fd.png\";","import React from 'react';\r\nimport logo from './../../assets/logo.png';\r\nimport './NavBar.css'\r\nconst NavBar = () =>{\r\n    return (\r\n        <div className=\"nav-container\">\r\n            <div className=\"nav-left\">\r\n                <img src={logo} alt=\"Logo\" className=\"flash-logo\" />\r\n                <p className=\"flash-logo-text\">Flash Type</p>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NavBar;","export default __webpack_public_path__ + \"static/media/hero.96e141d3.png\";","import React from 'react';\r\nimport './Landing.css';\r\nimport hero from './../../assets/hero.png'\r\nimport Typewriter from 'typewriter-effect'\r\nconst Landing = () => {\r\n    return(\r\n        <div className=\"landing-container\">\r\n            <div className=\"landing-left\" data-aos=\"fade-up-right\">\r\n                <h1 className=\"landing-header\">CAN YOU TYPE</h1>\r\n                <div className=\"typewriter-container\">\r\n                        <Typewriter \r\n                            options={{\r\n                                strings: ['FAST?','ACCURATE?'],\r\n                                autoStart:true,\r\n                                loop:true,\r\n                            }}\r\n                        />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"landing-right\">\r\n                <img src={hero} alt=\"Hero\" data-aos=\"fade-down-left\" className=\"landing-hero\"/>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Landing;\r\n\r\n","import React from 'react';\r\nimport './Footer.css';\r\n\r\nconst Footer = () => {\r\n    return(\r\n       <div className=\"footer-container\">\r\n           <a href=\"https://ganeshkaricharla.github.io\"\r\n              target=\"_blank\"\r\n              rel=\"noreferrer\"\r\n              className=\"footer-link\"\r\n           >Developer's Portfolio</a>\r\n\r\n       </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Footer;\r\n\r\n","import React from 'react';  \r\nimport './TryAgain.css';\r\n\r\nconst TryAgain = ({words,characters,wpm,startAgain}) => {\r\n    return(\r\n        <div className=\"try-again-container\">\r\n            <h1>Test Results</h1>\r\n            <div className=\"result-container\">\r\n            <p>\r\n                <b>Characters :</b> {characters}\r\n            </p>\r\n\r\n            <p>\r\n                <b>Words :</b> {words}\r\n            </p>\r\n\r\n            <p>\r\n                <b>wpm :</b> {wpm} wpm\r\n            </p>\r\n            </div>\r\n            <div>\r\n                <button \r\n                    className=\"end-button start-again-btn\"\r\n                    onClick={()=> startAgain()}\r\n                    >Retry</button>\r\n                <button \r\n                    onClick= {() =>{\r\n                        window.open(\"https://www.facebook.com/sharer/sharer.php?u=Great\",\"facebook-share-dialog\",\"width=800, height=600\");\r\n                    }}   \r\n                    className=\"end-button share-btn\">Share</button>\r\n                <button \r\n                    onClick= {() =>{\r\n                        window.open(\"https://www.twitter.com/intent/tweet?text=FlashType\",\"Twitter\",\"width=800, height=600\");\r\n                    }}   \r\n                    className=\"end-button tweet-btn\">Tweet</button>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default TryAgain;","import React from 'react';\r\nimport './ChallengeDetailsCard.css'\r\n\r\n\r\nconst ChallengeDetailsCard = ({ cardName , cardValue }) =>{\r\n    return(\r\n        <div className=\"details-card-container\">\r\n            <div className=\"card-name\">{cardName}</div>\r\n            <div className=\"card-value\">{cardValue}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChallengeDetailsCard;","import React from 'react';\r\nimport './TestLetter.css';\r\n\r\nconst TestLetter =({ individualLetterInfo }) => {\r\n    const {status } = individualLetterInfo;\r\n    let statusClass = {\r\n        correct: \"test-letter-correct\",\r\n        incorrect: \"test-letter-incorrect\",\r\n        notAttempted: \"test-letter-not-attempted\",\r\n    }[status];\r\n\r\n    return (\r\n        <span \r\n            className={`test-letter ${statusClass}`}\r\n            >\r\n            {individualLetterInfo.testLetter}\r\n        </span>\r\n    );\r\n};\r\n\r\nexport default TestLetter;","import  React from 'react';\r\nimport \"./TypingChallenge.css\";\r\nimport TestLetter from './../TestLetter/TestLetter'\r\nconst TypingChallenge = ( { selectedParagraph ,timeRemaining,timerStarted, testInfo,onInputChange }) => {\r\n    return (\r\n        <div className=\"typing-challenge\">\r\n            <div className=\"timer-container\">\r\n                <p className=\"timer\">00:\r\n                {timeRemaining >=10 ? timeRemaining :`0${timeRemaining}`}\r\n                </p>\r\n                <p className=\"timer-info\">\r\n                    {!timerStarted && \"Start typing to start the test\"}\r\n                </p>\r\n            </div>\r\n\r\n\r\n            <div className=\"textarea-container\">\r\n                <div className=\"textarea-left\">\r\n                        <div className=\"textarea text-paragraph\">\r\n                               {/* {selectedParagraph}*/}\r\n                               {\r\n                                   testInfo.map((individualLetterInfo,index) => {\r\n                                       return <TestLetter \r\n                                                key={index}\r\n                                                individualLetterInfo={individualLetterInfo}\r\n                                            />\r\n                                   })\r\n                                }\r\n                        </div>\r\n                </div>\r\n                <div className=\"textarea-right\">\r\n                        <textarea \r\n                            onChange={(e) => onInputChange(e.target.value)}\r\n                            className=\"textarea\" placeholder=\"Start Typing Here\">\r\n                        </textarea>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default TypingChallenge;","import React from 'react';\r\nimport './TypingChallengeContainer.css';\r\nimport ChallengeDetailsCard from './../ChallengeDetailsCard/ChallengeDetailsCard';\r\nimport TypingChallenge from '../TypingChallenge/TypingChallenge';\r\n\r\n\r\n\r\nconst TypingChallengeContainer =({ selectedParagraph ,words,characters,wpm,timeRemaining,timerStarted , testInfo,onInputChange}) => {\r\n    return (\r\n\r\n        <div className=\"typing-challenge-container\">\r\n            {/** Details Setion */}\r\n            <div className=\"details-container\">\r\n                {/**Words Typed */}\r\n                <ChallengeDetailsCard cardName=\"Words\" cardValue={words}/>\r\n\r\n                {/**Characters Typed */}\r\n                <ChallengeDetailsCard cardName=\"Characters\"cardValue={characters}/>\r\n\r\n                {/**Speed */}\r\n                <ChallengeDetailsCard cardName=\"WPM\" cardValue={wpm}/>\r\n            </div>\r\n\r\n            <div className=\"typewriter-container\">\r\n                <TypingChallenge \r\n                    selectedParagraph={selectedParagraph}\r\n                    timeRemaining={timeRemaining}    \r\n                    timerStarted={timerStarted}\r\n                    testInfo={testInfo}\r\n                    onInputChange = {onInputChange}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TypingChallengeContainer;","import React from 'react';\r\nimport './TestContainer.css';\r\nimport TryAgain from './../TryAgain/TryAgain';\r\nimport TypingChallengeContainer from './../TypingChallengeContainer/TypingChallengeContainer'\r\nconst TestContainer = ({ selectedParagraph ,words,characters,wpm,timeRemaining,timerStarted , testInfo,onInputChange,startAgain}) => {\r\n\r\n    return (\r\n        <div className=\"test-container\">\r\n            {timeRemaining > 0 ? \r\n            (\r\n            <div data-aos =\"fade-up\" className=\"typing-challenge-cont\">\r\n                <TypingChallengeContainer  \r\n                    selectedParagraph={selectedParagraph}\r\n                    words ={words}\r\n                    characters={characters}\r\n                    wpm={wpm}\r\n                    timeRemaining= {timeRemaining}\r\n                    timerStarted={timerStarted}\r\n                    testInfo={testInfo}\r\n                    onInputChange = {onInputChange}\r\n                />\r\n            </div>\r\n            ) : (\r\n                <div className=\"try-again-cont\">\r\n                <TryAgain \r\n                    words ={words}\r\n                    characters ={characters}\r\n                    wpm ={wpm}\r\n                    startAgain={startAgain}/>\r\n            </div>\r\n            )}\r\n\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TestContainer;\r\n","import React from 'react';\r\nimport './ChallengeSection.css';\r\nimport TestContainer from './../TestContainer/TestContainer';\r\n\r\n\r\nconst ChallengeSection = ( { \r\n        selectedParagraph,\r\n        words,\r\n        characters,\r\n        wpm,\r\n        timeRemaining,\r\n        timerStarted,\r\n        testInfo,\r\n        onInputChange,\r\n        startAgain    \r\n    } ) => {\r\n    return(\r\n        <div className=\"challenge-section-container\">\r\n            <h1 data-aos =\"fade-down\" className=\"challenge-section-header\">\r\n                Take Speed Test Now\r\n            </h1>\r\n            <TestContainer  \r\n                selectedParagraph={selectedParagraph}\r\n                words ={words}\r\n                characters={characters}\r\n                wpm={wpm}\r\n                timeRemaining= {timeRemaining}\r\n                timerStarted={timerStarted}\r\n                testInfo={testInfo}\r\n                onInputChange = {onInputChange}\r\n                startAgain = {startAgain}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChallengeSection;","import React from 'react';\r\nimport './App.css';\r\nimport NavBar from './../NavBar/NavBar'\r\nimport Landing from './../Landing/Landing'\r\nimport Footer from './../Footer/Footer'\r\nimport ChallengeSection from './../ChallengeSection/ChallengeSection';\r\n\r\nconst TotalTime = 60;\r\nconst serviceUrl =\"https://baconipsum.com/api/?type=all-meat&paras=3&start-with-lorem=1&format=text\";\r\nconst defaultState = {\r\n        selectedParagraph :\"\",\r\n        testInfo:[],\r\n        timerStarted: false,\r\n        timeRemaining: TotalTime,\r\n        words:0,\r\n        characters:0,\r\n        wpm:0\r\n}\r\n\r\nclass App extends React.Component\r\n{\r\n    state = defaultState;\r\n\r\n    fetchNewParagraph= () =>{\r\n        fetch(serviceUrl)\r\n        .then(response => response.text())\r\n        .then(data => {\r\n            const selectedParagraphArray = data.split(\"\");\r\n            const testInfo = selectedParagraphArray.map(selectedLetter =>{\r\n                return {\r\n                    testLetter:selectedLetter,\r\n                    status:\"notAttempted\",\r\n\r\n                };\r\n            });\r\n            this.setState({\r\n                ...defaultState,\r\n                testInfo,\r\n                selectedParagraph:data\r\n            });\r\n        }); \r\n    }\r\n\r\n    componentDidMount (){\r\n        this.fetchNewParagraph();\r\n    }\r\n\r\n    startTimer = () => {\r\n       this.setState(\r\n           {\r\n               timerStarted:true\r\n           });\r\n\r\n       const timer = setInterval(() => {\r\n           if(this.state.timeRemaining > 0 ) {\r\n\r\n            //change the wpm\r\n            const timeSpent = TotalTime - this.state.timeRemaining;\r\n\r\n            const wpm = timeSpent > 0 ? ((this.state.words/timeSpent)*TotalTime) : 5;\r\n            this.setState({timeRemaining:this.state.timeRemaining-1,wpm});\r\n            } \r\n            else {\r\n                clearInterval(timer);\r\n            }\r\n           }, 1000);     \r\n    };\r\n    startAgain = () => this.fetchNewParagraph();\r\n    handleUserInput = (inputValue) => {\r\n        if(!this.state.timerStarted) {\r\n            this.startTimer();\r\n        }\r\n\r\n        const characters = inputValue.length;\r\n        const words = inputValue.split(\" \").length -1;\r\n        const index = characters -1;\r\n\r\n        if(index < 0) {\r\n            this.setState({\r\n                testInfo:[\r\n                    {\r\n                        testLetter:this.state.testInfo[0].testLetter,\r\n                        status:\"notAttempted\"\r\n                    },\r\n                    ...this.state.testInfo.slice(1)\r\n                ],\r\n                characters,\r\n                words,\r\n            });\r\n            return;\r\n        }\r\n\r\n        if(index >= this.state.selectedParagraph.length) {\r\n            this.setState({characters,words});\r\n            return;\r\n        }\r\n\r\n        const testInfo = this.state.testInfo;\r\n        if(!(index === this.state.selectedParagraph.length-1)) {\r\n            testInfo[index+1].status =\"notAttempted\";\r\n        }\r\n\r\n        const isCorrect = inputValue[index]=== testInfo[index].testLetter;\r\n        testInfo[index].status = isCorrect?\"correct\":\"incorrect\";\r\n        \r\n        this.setState({\r\n            testInfo,\r\n            words,\r\n            characters\r\n        })\r\n    }\r\n    render(){\r\n\r\n        return(\r\n            <div className=\"app\">\r\n                <NavBar />\r\n\r\n                <Landing />\r\n\r\n                <ChallengeSection \r\n                    selectedParagraph={this.state.selectedParagraph}\r\n                    words ={this.state.words}\r\n                    characters={this.state.characters}\r\n                    wpm={this.state.wpm}\r\n                    timeRemaining= {this.state.timeRemaining}\r\n                    timerStarted={this.state.timerStarted}\r\n                    testInfo={this.state.testInfo}\r\n                    onInputChange={this.handleUserInput}\r\n                    startAgain = {this.startAgain}\r\n                />\r\n\r\n                <Footer />\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}